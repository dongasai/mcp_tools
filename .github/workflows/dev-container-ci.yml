name: Dev Container CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每日构建，确保基础镜像更新不会破坏构建
    - cron: '0 2 * * *'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=dev-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build dev container
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.dev
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Test dev container
      run: |
        # 启动容器进行测试
        docker compose up -d
        
        # 等待容器启动
        sleep 60
        
        # 检查容器是否运行
        docker compose ps
        
        # 检查容器日志
        docker compose logs app
        
        # 测试基本端口响应
        curl -f http://localhost:34004 || echo "Basic port check failed"
        
        # 停止容器
        docker compose down

    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        format: 'sarif'
        output: 'trivy-results.sarif'
      if: github.event_name != 'pull_request'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
      if: github.event_name != 'pull_request'

  test-migrations:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_sqlite, zip
        coverage: none

    - name: Install dependencies
      run: composer install --no-interaction --prefer-dist

    - name: Copy environment file
      run: cp .env.example .env

    - name: Generate app key
      run: php artisan key:generate

    - name: Create test database
      run: touch database/database.sqlite

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run seeders
      run: php artisan db:seed --force

  test-mcp:
    runs-on: ubuntu-latest
    needs: build-and-test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install supervisor
      run: sudo apt-get update && sudo apt-get install -y supervisor

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-test, test-migrations, test-mcp]
    if: always()
    
    steps:
    - name: Notify on failure
      if: failure()
      run: |
        echo "Dev container CI failed. Check the logs for details."
        
    - name: Notify on success
      if: success()
      run: |
        echo "Dev container CI completed successfully!"