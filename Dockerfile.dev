# MCP Tools 开发容器 - 基于  PHP 8.2
FROM php:8.2-cli

# 设置工作目录
WORKDIR /var/www/html

# 分多步骤进行，增强缓存，减少重复构建
# 安装系统依赖 (仅必需的)
ENV UPDATE_TIMES=1
RUN apt-get update
RUN apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    sqlite3 \
    libsqlite3-dev \
    libzip-dev

# 安装 PHP 扩展 (仅必需的)
RUN docker-php-ext-install \
    pdo \
    pdo_sqlite \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip \
    sockets \
    zip


# 安装 Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# 从Node.js 22镜像获取Node.js和npm
COPY --from=node:22 /usr/local/bin/node /usr/local/bin/node
COPY --from=node:22 /usr/local/lib/node_modules /usr/local/lib/node_modules
RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm && \
    ln -s /usr/local/lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx

# 安装进程守护工具
RUN apt-get install -y supervisor && \
    mkdir -p /etc/supervisor/conf.d /var/log/supervisor

# 复制supervisor配置文件
COPY docker/supervisord.conf /etc/supervisor/conf.d/laravel.conf

# 创建uid为1000的用户和用户组
RUN groupadd -g 1000 appuser && \
    useradd -u 1000 -g appuser -m -s /bin/bash appuser

# 创建必要的缓存目录并设置权限
RUN mkdir -p /.npm /.composer/cache/files /var/www/html/storage/logs /var/www/html/storage/app/public /var/www/html/storage/framework/cache /var/www/html/storage/framework/sessions /var/www/html/storage/framework/views /var/www/html/bootstrap/cache && \
    chown -R appuser:appuser /var/www/html && \
    chmod -R 755 /var/www/html && \
    chmod -R 777 /.npm /.composer /var/www/html/storage /var/www/html/bootstrap/cache

# 复制启动脚本
COPY docker/start.sh /start.sh
RUN chmod +x /start.sh

# 设置容器启动命令
CMD ["/start.sh"]



